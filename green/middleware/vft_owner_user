// middleware/auth.js
const jwt = require('jsonwebtoken');

const verifyUserToken = (req, res, next) => {
    const token = req.headers['authorization']?.split(' ')[1];
    if (!token) return res.status(401).json({ message: 'Access token missing or invalid' });

    jwt.verify(token, process.env.USER_key, (err, user) => {
        if (err) return res.status(403).json({ message: 'Token is invalid or expired' });

        req.user = user;
        next();
    });
};

const verifyOwnerToken = (req, res, next) => {
    const token = req.headers['authorization']?.split(' ')[1];
    if (!token) return res.status(401).json({ message: 'Access token missing or invalid' });

    jwt.verify(token, process.env.OWNER_TOKEN_SECRET, (err, user) => {
        if (err) return res.status(403).json({ message: 'Token is invalid or expired' });

        req.user = user;
        next();
    });
};

module.exports = { verifyUserToken, verifyOwnerToken };
